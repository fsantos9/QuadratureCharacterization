#ifndef GeneralizedMomentInversion_H
#define GeneralizedMomentInversion_H

//IO
#include <iostream>
//Vector class to use smart pointer
#include <vector>


class GeneralizedMomentInversion
{
    // Private data
     //Generalized Moments
      vector<double> Gmom_;
     //Weight
      vector<double> weights_;
     //Abscissas
      vector<double> abs_;
     //Error
      int error_;


    // Private Member Functions

      //- Disallow default bitwise copy construct
        GeneralizaedMomentInversion(constGeneralizaedMomentInversion&);

        //- Disallow default bitwise assignment
        void operator=(const GeneralizaedMomentInversion&);


public:
    // Constructors

        //- Construct from scalar field moments
        GeneralizaedMomentInversion(const vector<double>& GMom);


    // Destructor

        virtual ~ GeneralizaedMomentInversion()
        {}

    // Member Functions
        const vector<double>& weights() const
        {
            return weights_;
        }

        const vector<double>& abscissas() const
        {
            return abs_;
        }

        const int error() const
        {
            return error_;
        }



};

#endif
