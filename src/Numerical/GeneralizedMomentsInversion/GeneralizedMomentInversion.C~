/*SourceFiles
    GeneralizedMomentInversion.C

Author
    LTFD. All rights reserved

    Laboratory of Thermo-Fluid Dynamics (LTFD)/ CFD Laboratory (LabCFD)
    Chemical Engineering Program (COPPE/PEQ/UFRJ) / Chemical School (EQ/UFRJ)
 
    Federal University of Rio de Janeiro Rio de Janeiro, Brazil

    Code implementation:
    Fabio P. Santos

\*---------------------------------------------------------------------------*/
#include "GeneralizedMomentInversion.H"


    extern "C"
    {   /* This function calculates the recursion coeficient based on the moments */
        void dcheb_
                (
                    int *, double *, double *, double *, double *, double *,
                    double *, int *, double *, double *, double *, double *, double *
                );
        /* This function calculates the weights and abscissas based on the moments */
        void dgauss_
                (
                    int *, double *, double *, double *, double *, double *,
                    int *, double *
                );

    }


GeneralizaedMomentInversion::GeneralizaedMomentInversion
(
  const vector<double>& GMom
):
  weights_(GMom.size()/2),
  abs_(GMom.size()/2)
{

  register nMom = GMom.size();
  register npt  = GMom.size()/2;


  double  *moment  = new double[nMom];
  double  *Weight  = new double[npt];
  double  *Abs     = new double[npt];



 delete [] moment;
 delete [] Weight;
 delete [] Abs;

}
